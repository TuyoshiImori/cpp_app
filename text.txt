(Fig) signalled err=-12710 at <>:601
(Fig) signalled err=-12710 at <>:601
(Fig) signalled err=-12710 at <>:601
<<<< FigXPCUtilities >>>> signalled err=-17281 at <>:299
<<<< FigCaptureSourceRemote >>>> Fig assert: "err == 0 " at bail (FigCaptureSourceRemote.m:569) - (err=-17281)
OpenCVWrapper: 元画像 channels=1, type=0, size=804x1138
OpenCVWrapper: テンプレートマッチングで検出された個数: 6
OpenCVWrapper: 切り取り領域計算開始
OpenCVWrapper: 円0: 切り取り領域 x=43, y=183, w=761, h=91
OpenCVWrapper: 円1: 切り取り領域 x=43, y=274, w=761, h=99
OpenCVWrapper: 円2: 切り取り領域 x=43, y=373, w=761, h=73
OpenCVWrapper: 円3: 切り取り領域 x=43, y=446, w=761, h=150
OpenCVWrapper: 円4: 切り取り領域 x=43, y=596, w=761, h=163
OpenCVWrapper: 円5: 切り取り領域 x=43, y=759, w=761, h=379
OpenCVWrapper: 処理完了 - 切り取った画像数: 6
Swift側 optionTexts:
  index[0]: ["10代未満", "10代", "20代", "30代", "40代", "50代", "60代", "70代", "80代以上", "その他"]
  index[1]: ["ポスター", "出演者から", "SNS(X,Instagram,Facebook)", "その他"]
  index[2]: ["大変良かった", "良かった", "普通", "良くなかった", "悪かった"]
  index[3]: []
  index[4]: []
  index[5]: []
OpenCVWrapper.parseCroppedImages: images=6, types=6, optionTexts=6
OpenCVWrapper.parseCroppedImages: provided types=(
    single,
    multiple,
    single,
    text,
    text,
    info
)
OpenCVWrapper.parseCroppedImages: provided optionTexts (count=6):
  optionTexts[0] (count=10):
    [0]: 10代未満
    [1]: 10代
    [2]: 20代
    [3]: 30代
    [4]: 40代
    [5]: 50代
    [6]: 60代
    [7]: 70代
    [8]: 80代以上
    [9]: その他
  optionTexts[1] (count=4):
    [0]: ポスター
    [1]: 出演者から
    [2]: SNS(X,Instagram,Facebook)
    [3]: その他
  optionTexts[2] (count=5):
    [0]: 大変良かった
    [1]: 良かった
    [2]: 普通
    [3]: 良くなかった
    [4]: 悪かった
  optionTexts[3] (count=0):
  optionTexts[4] (count=0):
  optionTexts[5] (count=0):
OpenCVWrapper: index=0 -> storedType=single, optionCount=10
  option[0]: 10代未満
  option[1]: 10代
  option[2]: 20代
  option[3]: 30代
  option[4]: 40代
  option[5]: 50代
  option[6]: 60代
  option[7]: 70代
  option[8]: 80代以上
  option[9]: その他
OpenCVWrapper: index=0 -> handling as SINGLE with 10 options
OpenCVWrapper: detectCheckboxes - 10個のチェックボックスを検出
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: detectSingleAnswer - 通常のチェックが見つからないため、その他を確認
OpenCVWrapper: detectSingleAnswer - 「その他」選択肢を発見: index=9, option=その他
OpenCVWrapper: detectSingleAnswer - 「その他」の自由回答を検出試行中（チェックなし）
OpenCVWrapper: detectOtherFreeTextAtIndex - ターゲットチェックボックス位置: x=26, y=65, w=14, h=14 (index=9)
OpenCVWrapper: detectOtherFreeTextAtIndex - テキスト領域: x=68, y=60, w=683, h=24
OpenCVWrapper: recognizeTextFromImage - 認識結果: '0他（ 10D歳 ）'
OpenCVWrapper: extractTextFromParentheses - 元テキスト: '0他（ 10D歳 ）' -> 抽出結果: '10D歳'
OpenCVWrapper: detectOtherFreeTextAtIndex - 認識されたテキスト: '0他（ 10D歳 ）' -> 括弧内抽出後: '10D歳'
OpenCVWrapper: detectSingleAnswer - チェックなしでその他の自由回答を検出: 10D歳
OpenCVWrapper: index=1 -> storedType=multiple, optionCount=4
  option[0]: ポスター
  option[1]: 出演者から
  option[2]: SNS(X,Instagram,Facebook)
  option[3]: その他
OpenCVWrapper: index=1 -> handling as MULTIPLE with 4 options
OpenCVWrapper: detectCheckboxes - 4個のチェックボックスを検出
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 18.37%, チェック済み: YES
OpenCVWrapper: detectMultipleAnswer - チェック検出: index=0, option=ポスター
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 19.39%, チェック済み: YES
OpenCVWrapper: detectMultipleAnswer - チェック検出: index=2, option=SNS(X,Instagram,Facebook)
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: detectMultipleAnswer - 「その他」選択肢を発見: index=3, option=その他
OpenCVWrapper: detectOtherFreeTextAtIndex - ターゲットチェックボックス位置: x=26, y=62, w=14, h=14 (index=3)
OpenCVWrapper: detectOtherFreeTextAtIndex - テキスト領域: x=68, y=57, w=683, h=24
OpenCVWrapper: recognizeTextFromImage - 認識結果: 'D他（あいうえお ）'
OpenCVWrapper: extractTextFromParentheses - 元テキスト: 'D他（あいうえお ）' -> 抽出結果: 'あいうえお'
OpenCVWrapper: detectOtherFreeTextAtIndex - 認識されたテキスト: 'D他（あいうえお ）' -> 括弧内抽出後: 'あいうえお'
OpenCVWrapper: detectMultipleAnswer - 括弧内の自由回答を検出（その他候補）: あいうえお
OpenCVWrapper: detectMultipleAnswer - 最終結果: ポスター,SNS(X,Instagram,Facebook),あいうえお
OpenCVWrapper: index=2 -> storedType=single, optionCount=5
  option[0]: 大変良かった
  option[1]: 良かった
  option[2]: 普通
  option[3]: 良くなかった
  option[4]: 悪かった
OpenCVWrapper: index=2 -> handling as SINGLE with 5 options
OpenCVWrapper: detectCheckboxes - 5個のチェックボックスを検出
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 0.00%, チェック済み: NO
OpenCVWrapper: チェックボックス判定 - 黒ピクセル率: 17.35%, チェック済み: YES
OpenCVWrapper: detectSingleAnswer - チェック検出: index=4, option=悪かった
OpenCVWrapper: detectSingleAnswer - 選択された選択肢「悪かった」は通常の選択肢
OpenCVWrapper: index=3 -> storedType=text, optionCount=0
OpenCVWrapper: index=3 -> handling as TEXT
OpenCVWrapper: detectLargestTextBox - label=1 rect=(x=0,y=0,w=761,h=150) area=47318 sizeOK=0 rectOK=1 areaOK=1 borderOK=0
OpenCVWrapper: detectLargestTextBox - label=2 rect=(x=26,y=39,w=671,h=95) area=63480 sizeOK=1 rectOK=1 areaOK=1 borderOK=1
OpenCVWrapper: detectLargestTextBox - 1 candidates, maxArea=63480
OpenCVWrapper: detectTextAnswer - テキストボックス領域: x=26, y=39, w=671, h=95
OpenCVWrapper: recognizeTextFromImage - 認識結果: 'よかった 楽しかった'
OpenCVWrapper: detectTextAnswer - 認識されたテキスト: 'よかった 楽しかった' -> クリーンアップ後: 'よかった 楽しかった'
OpenCVWrapper: index=4 -> storedType=text, optionCount=0
OpenCVWrapper: index=4 -> handling as TEXT
OpenCVWrapper: detectLargestTextBox - label=1 rect=(x=0,y=0,w=761,h=163) area=57211 sizeOK=0 rectOK=1 areaOK=1 borderOK=0
OpenCVWrapper: detectLargestTextBox - label=2 rect=(x=26,y=55,w=671,h=95) area=63710 sizeOK=1 rectOK=1 areaOK=1 borderOK=1
OpenCVWrapper: detectLargestTextBox - 1 candidates, maxArea=63710
OpenCVWrapper: detectTextAnswer - テキストボックス領域: x=26, y=55, w=671, h=95
OpenCVWrapper: recognizeTextFromImage - 認識結果: 'とくになし'
OpenCVWrapper: detectTextAnswer - 認識されたテキスト: 'とくになし' -> クリーンアップ後: 'とくになし'
OpenCVWrapper: index=5 -> storedType=info, optionCount=0
OpenCVWrapper: index=5 -> handling as INFO
OpenCVWrapper: detectInfoAnswer - 入力画像サイズ: 761x379
OpenCVWrapper: detectTableOuterBounds - morphology法で外枠検出失敗、Cannyフォールバックを試行
OpenCVWrapper: detectTableOuterBounds - findContours で 34 個の輪郭を検出
OpenCVWrapper: detectTableOuterBounds - Canny法で外枠を検出: x=22, y=50, w=679, h=252 (area=171108)
OpenCVWrapper: detectInfoAnswer - 表の外側枠線: x=22, y=50, w=679, h=252
OpenCVWrapper: detectColumnDivider(scale=0.60) - maxWhite=248, ratio=0.984, x=113
OpenCVWrapper: detectColumnDivider - 最終検出位置: x=113
OpenCVWrapper: detectInfoAnswer - 列分割位置: x=113
OpenCVWrapper: detectInfoAnswer - 右列領域: x=118, y=0, w=556, h=252
OpenCVWrapper: detectHorizontalLinesInColumn - 検出された水平線数: 14 -> 7 (マージ後)
  水平線0: y=2
  水平線1: y=41
  水平線2: y=81
  水平線3: y=121
  水平線4: y=161
  水平線5: y=201
  水平線6: y=248
OpenCVWrapper: detectInfoAnswer - 検出された水平線数: 7
OpenCVWrapper: detectInfoAnswer - 行0: y=4, h=35
OpenCVWrapper: recognizeTextFromImage - 認識結果: 'いいもり'
OpenCVWrapper: detectInfoAnswer - 行0認識テキスト: 'いいもり'
OpenCVWrapper: detectInfoAnswer - 行1: y=43, h=36
OpenCVWrapper: recognizeTextFromImage - 認識結果: '飯科'
OpenCVWrapper: detectInfoAnswer - 行1認識テキスト: '飯科'
OpenCVWrapper: detectInfoAnswer - 行2: y=83, h=36
OpenCVWrapper: recognizeTextFromImage - 認識結果: 'ab c@gmail.com'
OpenCVWrapper: detectInfoAnswer - 行2認識テキスト: 'ab c@gmail.com'
OpenCVWrapper: detectInfoAnswer - 行3: y=123, h=36
OpenCVWrapper: recognizeTextFromImage - 認識結果: '050-1234-5678'
OpenCVWrapper: detectInfoAnswer - 行3認識テキスト: '050-1234-5678'
OpenCVWrapper: detectInfoAnswer - 行4: y=163, h=36
OpenCVWrapper: recognizeTextFromImage - 認識結果: '〒 123-4567'
OpenCVWrapper: detectInfoAnswer - 行4認識テキスト: '〒 123-4567'
OpenCVWrapper: detectInfoAnswer - 行5: y=203, h=43
OpenCVWrapper: recognizeTextFromImage - 認識結果: '千葉県'
OpenCVWrapper: detectInfoAnswer - 行5認識テキスト: '千葉県'
OpenCVWrapper: detectInfoAnswer - 最終結果: 'いいもり
飯科
ab c@gmail.com
050-1234-5678
〒 123-4567
千葉県'